#include <dht11.h>
#include <LiquidCrystal.h>

#define BUZZER  3  
#define BUZZER2  4     
#define DHT_PIN  2
#define TRIG 6
#define ECHO 5
#define RS 13
#define E 12
#define LCD_PIN_DB4 10
#define LCD_PIN_DB5 9
#define LCD_PIN_DB6 8
#define LCD_PIN_DB7 7
#define LED 0
#define RED_LED 1
#define LDR_PIN A5
#define FLAME_PIN 11


long t ;
int d;
dht11 DHT; // Creats a DHT object
LiquidCrystal lcd(RS,E,LCD_PIN_DB4,LCD_PIN_DB5,LCD_PIN_DB6,LCD_PIN_DB7);  // Creates an LCD object. Parameters: (rs, enable, d4, d5, d6, d7)

void setup() {
    lcd.begin(16, 2); // Initializes the interface to the LCD screen, and specifies the dimensions (width and height) of the display.
    pinMode(TRIG,OUTPUT);
    pinMode(ECHO,INPUT);
    pinMode(LED,OUTPUT);
    pinMode(BUZZER,OUTPUT);
    pinMode(LDR_PIN,INPUT);
    pinMode(RED_LED,OUTPUT);
    pinMode(FLAME_PIN,INPUT);
    pinMode(BUZZER2,OUTPUT);
 
}

void loop() {
  //DHT with LCD and BUZZER
  int readData = DHT.read(DHT_PIN);// Reads the data from the sensor
  float t = DHT.temperature;
  float h = DHT.humidity;
  lcd.setCursor(0,0);   // Sets the location at which subsequent text written to the LCD will be displayed
  lcd.print("Temp.: "); // Prints string "Temp." on the LCD
  lcd.print(t); // Prints the temperature value from the sensor
  lcd.print(" C");
  if(t >= 40){
    digitalWrite(BUZZER2,HIGH);
  }
  else{
    digitalWrite(BUZZER2,LOW);
  }
  
  //ULTRASONIC with BUZZER
  digitalWrite(TRIG,LOW); // Clears the trigPin.
  delayMicroseconds(2);  
  digitalWrite(TRIG,HIGH);// Sets the trigPin on HIGH state for 10 micro seconds
  delayMicroseconds(10);
  digitalWrite(TRIG,LOW); 
  t = pulseIn(ECHO,HIGH);// Reads the echoPin, returns the sound wave travel time in microseconds
  d = (.034*t)/2;
  lcd.setCursor(0,1);
  lcd.print("Dist.: ");
  lcd.print(d);
  lcd.print(" m");

  if(d < 100)
  {
    digitalWrite(BUZZER,HIGH);
  }
  else
  {
   digitalWrite(BUZZER,LOW);
  }
 
  //LDR with LED
  int ldrStatus = analogRead(LDR_PIN); //read the status of the ldr value.
  if(ldrStatus <= 300)
  {
    digitalWrite(LED,HIGH); //It's dark and the led is on.
  }
  else
  {
    digitalWrite(LED,LOW); //It's light and the led is off.
  }

  //Fire sensor with red led
  if(digitalRead(FLAME_PIN) == HIGH){
    digitalWrite(RED_LED,HIGH); 
  }
  else{
    digitalWrite(RED_LED,LOW);
  }
 
} 
